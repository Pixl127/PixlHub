local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "PixlHub",
    Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
    LoadingTitle = "PixlHub",
    LoadingSubtitle = "by Pixl",
    ShowText = "",         -- for mobile users to unhide rayfield, change if you'd like
    Theme = "Default",     -- Check https://docs.sirius.menu/rayfield/configuration/themes

    ToggleUIKeybind = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

    ConfigurationSaving = {
        Enabled = true,
        FolderName = "PixlLib", -- Create a custom folder for your hub/game
        FileName = "PixlHub"
    },

    Discord = {
        Enabled = false,         -- Prompt the user to join your Discord server if their executor supports it
        Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
        RememberJoins = true     -- Set this to false to make them join the discord every time they load it up
    },

    KeySystem = false, -- Set this to true to use our key system
    KeySettings = {
        Title = "Untitled",
        Subtitle = "Key System",
        Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
        FileName = "Key",                                    -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
        SaveKey = true,                                      -- The user's key will be saved, but if you change the key, they will be unable to use your script
        GrabKeyFromSite = false,                             -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
        Key = { "Hello" }                                    -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
})

-- global variables
local remotes = workspace:WaitForChild("__THINGS"):WaitForChild("__REMOTES")
local library = require(game:GetService("ReplicatedStorage"):WaitForChild("Framework"):WaitForChild("Library"))


--------------------------------------------------------
-- Tabs
--------------------------------------------------------
local InfoTab = Window:CreateTab("Info", 4483362458)
--local FarmTab = Window:CreateTab("Farming", 4483362458)
local EggTab = Window:CreateTab("Eggs", 4483362458)
local MiscTab = Window:CreateTab("Misc", 4483362458)
--local WebHookTab = Window:CreateTab("Webhooks", 4483362458)
local ScriptTab = Window:CreateTab("Script", 4483362458)
local DevTab = Window:CreateTab("Dev", 4483362458)



--------------------------------------------------------
-- Info Tab
--------------------------------------------------------

InfoTab:CreateParagraph({
    Title = "test?",
    Content = [[ yo idk bro ]]
})

InfoTab:CreateParagraph({
    Title = "Credits",
    Content = [[ this script was created by Pixl ]]
})

--------------------------------------------------------
-- Farm Tab
--------------------------------------------------------

--------------------------------------------------------
-- Egg Tab
--------------------------------------------------------

--- Variables
local selectedEgg = nil
local selectedAmount = "8Eggs"
local autoOpen = false
local disableHatchAnimation = true
local originalOpenEggFunctions = {}

local EggConfigSection = EggTab:CreateSection("Egg Config")

-- Grab all eggs
local allEggs = {}
for _, area in ipairs(workspace.__MAP.Eggs:GetChildren()) do
    if area:FindFirstChild("Eggs") then
        for _, egg in ipairs(area.Eggs:GetChildren()) do
            local id = egg:GetAttribute("ID")
            if id then
                table.insert(allEggs, id)
            end
        end
    end
end

table.sort(allEggs, function(a, b)
    return tostring(a) < tostring(b)
end)

local EggSelectionDropdown = EggTab:CreateDropdown({
    Name = "Select Egg",
    Options = allEggs,
    CurrentOption = { allEggs[1] },
    MultipleOptions = false,
    Flag = "Dropdown_SelectEgg",
    Callback = function(Options)
        selectedEgg = Options[1]
    end,
})


local ReloadEggs = EggTab:CreateButton({
    Name = "Reload Egg Dropdown",
    Callback = function()
        local newEggs = {}
        for _, area in ipairs(workspace.__MAP.Eggs:GetChildren()) do
            if area:FindFirstChild("Eggs") then
                for _, egg in ipairs(area.Eggs:GetChildren()) do
                    local id = egg:GetAttribute("ID")
                    if id then
                        table.insert(newEggs, id)
                    end
                end
            end
        end

        allEggs = newEggs

        table.sort(allEggs, function(a, b)
            return tostring(a) < tostring(b)
        end)

        EggSelectionDropdown:Refresh(allEggs)

        if allEggs[1] then
            EggSelectionDropdown:Set(allEggs[1])
            selectedEgg = allEggs[1]
        end
    end,
})


local EggAmountDropdown = EggTab:CreateDropdown({
    Name = "Select Egg Opening Amount",
    Options = { "1Egg", "3Eggs", "8Eggs" },
    CurrentOption = { "8Eggs" },
    MultipleOptions = false,
    Flag = "Dropdown_SelectAmount",
    Callback = function(Options)
        selectedAmount = Options[1]
    end,
})

local function getEggPositionByID(eggID)
    for _, area in ipairs(workspace.__MAP.Eggs:GetChildren()) do
        if area:FindFirstChild("Eggs") then
            for _, egg in ipairs(area.Eggs:GetChildren()) do
                if egg:GetAttribute("ID") == eggID then
                    return egg.PrimaryPart and egg.PrimaryPart.Position or egg.Position
                end
            end
        end
    end
    return nil
end

local function distanceTo(position)
    local hrp = game.Players.LocalPlayer.Character and
        game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return math.huge end
    return (hrp.Position - position).Magnitude
end

local function teleportTo(position)
    local hrp = game.Players.LocalPlayer.Character and
        game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if hrp then
        hrp.CFrame = CFrame.new(position + Vector3.new(0, 3, 0))
    end
end

local ToggleSection = EggTab:CreateSection("Auto Hatch Settings")

local AutoOpenEggToggle = EggTab:CreateToggle({
    Name = "Auto Hatch Selected Egg",
    CurrentValue = false,
    Flag = "Toggle_AutoHatch",
    Callback = function(Value)
        autoOpen = Value
        if autoOpen then
            task.spawn(function()
                while autoOpen do
                    if selectedEgg then
                        local eggPos = getEggPositionByID(selectedEgg)
                        if eggPos then
                            if distanceTo(eggPos) > 20 then
                                teleportTo(eggPos)
                                task.wait(0.5)
                            end

                            local open3, open8, extra = false, false, false
                            if selectedAmount == "3Eggs" then
                                open3 = true
                            elseif selectedAmount == "8Eggs" then
                                open8, extra = true, true
                            end

                            local args = { { selectedEgg, open3, open8, extra } }
                            workspace:WaitForChild("__THINGS")
                                :WaitForChild("__REMOTES")
                                :WaitForChild("buy egg")
                                :InvokeServer(unpack(args))
                        end
                    end
                    task.wait(0.3)
                end
            end)
        end
    end,
})

local DisableHatchAnimToggle = EggTab:CreateToggle({
    Name = "Disable Hatch Animation",
    CurrentValue = false,
    Flag = "Toggle_DisableHatchAnim",
    Callback = function(Value)
        disableHatchAnimation = Value
        if disableHatchAnimation then
            -- Überschreibe OpenEgg-Funktion
            for i, v in pairs(getgc(true)) do
                if typeof(v) == "table" and rawget(v, "OpenEgg") then
                    originalOpenEggFunctions[v] = v.OpenEgg
                    v.OpenEgg = function() return end
                end
            end
        else
            -- Stelle originale Funktionen wieder her
            for v, func in pairs(originalOpenEggFunctions) do
                if v then
                    v.OpenEgg = func
                end
            end
            originalOpenEggFunctions = {}
        end
    end,
})

workspace.CurrentCamera.ChildAdded:Connect(function(child)
    if disableHatchAnimation then
        -- Prüfen, ob es eine Hatch-Animation ist
        if child.Name:match("EggOpenPetInfo") or child:IsA("Model") or child:IsA("Part") or child:IsA("MeshPart") then
            pcall(function()
                child.CFrame = CFrame.new(0, -1000, 0)
                if child:IsA("BasePart") then
                    child.Transparency = 1
                elseif child:IsA("Model") then
                    for _, part in ipairs(child:GetDescendants()) do
                        if part:IsA("BasePart") then
                            part.Transparency = 1
                        end
                    end
                end
            end)
        end
    end
end)




--------------------------------------------------------
-- Misc Tab
--------------------------------------------------------
local AntiAFK = false
local connection

local AntiAFKToggle = MiscTab:CreateToggle({
    Name = "Anti AFK",
    CurrentValue = true,
    Flag = "Toggle_AntiAFK",
    Callback = function(Value)
        AntiAFK = Value
        if AntiAFK then
            connection = game.Players.LocalPlayer.Idled:Connect(function()
                game:GetService("VirtualUser"):ClickButton2(Vector2.new())
            end)
        else
            if connection then
                connection:Disconnect()
                connection = nil
            end
        end
    end,
})


--------------------------------------------------------
-- WebHook Tab
--------------------------------------------------------



--------------------------------------------------------
-- Script Tab
--------------------------------------------------------
local DestroyUiButton = ScriptTab:CreateButton({
    Name = "Destroy UI",
    Callback = function()
        Rayfield:Destroy()
    end,
})

--------------------------------------------------------
-- Dev Tab
--------------------------------------------------------
local LoadInfiniteYieldButton = DevTab:CreateButton({
    Name = "Load IY",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
    end,
})

--Rayfield:LoadConfiguration()

-- https://github.com/Pixl127/PixlHub
